name: Deploy to Stage and Prod

on:
  push:
    branches:
      - main
      - stage  # Changed from staging
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/recovo-resell-api
          tags: |
            type=sha,prefix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-stage: # Changed from deploy-staging
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage' # Changed from staging
    environment:
      name: stage # Changed from staging
      # url: http://${{ secrets.HETZNER_SSH_HOST }}
    steps:
      - name: Deploy to Hetzner Stage
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_SSH_HOST }}
          username: ${{ secrets.HETZNER_SSH_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            # Set all environment variables needed by your app
            # These are pulled from the correct GitHub Environment (stage or prod)
            export DOCKER_IMAGE_TAG=${{ needs.build-and-push.outputs.image_tag }}
            export DOCKER_IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/recovo-api

            # --- Application Environment Variables ---
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export ALGORITHM=${{ secrets.ALGORITHM }}

            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}

            
            # For non-secret variables stored in GitHub, use vars.
            export AWS_REGION=${{ vars.AWS_REGION }}
            export ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
            export DATABASE_POOL_SIZE_OVERFLOW=${{ vars.DATABASE_POOL_SIZE_OVERFLOW }}
            export DATABASE_HOSTNAME=db # This is hardcoded as it's an internal docker hostname
            export DATABASE_PORT=5432

            # Navigate to your app directory
            cd /root/app

            # Pull latest code and restart services
            git pull origin stage # Change branch name accordingly
            docker-compose pull
            docker-compose up -d --force-recreate

  deploy-prod: # Changed from deploy-production
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod # Changed from production
      # url: http://${{ secrets.HETZNER_SSH_HOST }}
    steps:
      - name: Deploy to Hetzner Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_SSH_HOST }}
          username: ${{ secrets.HETZNER_SSH_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            export DOCKER_IMAGE_TAG=${{ needs.build-and-push.outputs.image_tag }}
            export DOCKER_IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/recovo-resell-api
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}

            cd /root/my-app

            git pull origin main

            docker-compose pull
            docker-compose up -d