
services:
  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  api:
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG:-latest}
    build: .
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - SHOPIFY_APP_URL=${SHOPIFY_APP_URL}
      - SHOPIFY_ACCESS_TOKEN=${SHOPIFY_ACCESS_TOKEN}
      - SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
      - SHOPIFY_API_SECRET=${SHOPIFY_API_SECRET}
      - SHOPIFY_API_VERSION=${SHOPIFY_API_VERSION}
      - DATABASE_HOSTNAME=db
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PORT=5432
      - DOMAIN=${DOMAIN}


  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    volumes:
      # Monta el directorio de certificados del servidor
      - /root/certs:/etc/ssl/private
      # Monta la plantilla de configuraci√≥n de Nginx (como antes)
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - api
    command: /bin/sh -c "envsubst '${DOMAIN}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  postgres_data: